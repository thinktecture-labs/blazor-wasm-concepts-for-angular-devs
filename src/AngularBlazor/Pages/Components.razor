@page "/Components"

<MudText Typo="Typo.h3">Components</MudText>
<MudTabs Elevation="1">
    <MudTabPanel Text="Use case">
        <MudList>
            <MudListItem Icon="@Icons.Material.Bookmark">Create a simple component</MudListItem>
            <MudListItem Icon="@Icons.Material.Bookmark">Add input parameter to pass some text</MudListItem>
            <MudListItem Icon="@Icons.Material.Bookmark">Add output parameter that fires if a button in the component is clicked</MudListItem>
        </MudList>
    </MudTabPanel>
    <MudTabPanel Text="Angular">
        <pre class="language-typescript">
            <code class="language-typescript">@@Component(
{
    selector: 'my-component',
    template: '@("<h1>This is my Angular component</h1><button (click)=\"buttonClick()\">Click me!</button")'
})
export class AngularComponent {
    @@Input()
    public string myParameter;

    public buttonClick() {
        console.log('Button clicked!');
    }
}


Usage:
@("<my-component myParameter=\"Hello World!\"></my-component>")</code>
        </pre>
    </MudTabPanel>
    <MudTabPanel Text="Blazor">
        <pre class="language-csharp">
            <code class="language-csharp">@("<h1>This is a Blazor test component</h1>")
@("<button @onclick=ButtonClick>Click me!</button>")
@@code {
    private void ButtonClick() {
        Console.WriteLine(\"Button clicked!\");
    }
}</code>
        </pre>
    </MudTabPanel>
    <MudTabPanel Text="In Action">
        <SampleComponent MyParameter="@Text" ButtonClicked="@ButtonClicked"></SampleComponent>

        <MudCard>
            <MudCardContent>
                <MudText>Button inside of sample component clicked <MudText Color="Color.Success">@Counter</MudText> times.</MudText>
            </MudCardContent>
        </MudCard>
    </MudTabPanel>
</MudTabs>