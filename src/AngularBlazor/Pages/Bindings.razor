@page "/Bindings"
<MudText Typo="Typo.h3">Bindings</MudText>
<MudTabs Elevation="1">
    <MudTabPanel Text="Use case">
        <MudList>
            <MudListItem Icon="@Icons.Material.Bookmark">Simple component with an input and output parameter.</MudListItem>
            <MudListItem Icon="@Icons.Material.Bookmark">Change Text and click button.</MudListItem>
            <MudListItem Icon="@Icons.Material.Bookmark">
                Changed text will be used in the callback and shown outside
                of the example component.
            </MudListItem>
        </MudList>
    </MudTabPanel>
    <MudTabPanel Text="Angular">
        <pre class="language-html">
            <code class="language-html">// One way binding
@("<my-component [parameter]=\"myValue\"></my-component>")

// Two way binding
@("<my-component [(parameter)]=\"myValue\"></my-component>")

// Input and output binding
@("<my-component [parameter]=\"myValue\" (parameterChange)=\"myParameterChanged($event)\"></my-component>")

// Simple display of property value
@("<span>{{ myValue }}</span>")

// Attribute binding
@("<div [attribute.value]=\"myParameter\"></div>")
        </code>
        </pre>
    </MudTabPanel>
    <MudTabPanel Text="Blazor">
        <pre class="language-html">
            <code class="language-html">// One way binding
@("<MyComponent InputParameter=InputValue></MyComponent")

// Input and output binding
@("<MyComponent></MyComponent>")

// Two way binding
@("<MyComponent @bind-InputParameter=\"InputValue\"></MyComponent>")

// No concrete attribute binding in Blazor
// Only passing values to the attributes possible
@("<MyComponent class=@myClasses></MyComponent>")
            </code>
        </pre>
    </MudTabPanel>
    <MudTabPanel Text="In Action">
        <BindingSample @bind-MyParameter="MyParameterValue"></BindingSample>

        <MudCard>
            <MudCardContent>
                <MudText>MyParameterValue: <i>@MyParameterValue</i></MudText>
            </MudCardContent>
        </MudCard>
    </MudTabPanel>
</MudTabs>